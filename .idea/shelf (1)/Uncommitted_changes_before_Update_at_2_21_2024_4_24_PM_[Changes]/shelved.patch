Index: src/main/java/org/example/Controller/Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.Controller;\r\n\r\nimport org.example.Model.CasinoAI;\r\nimport org.example.Model.CasinoMembers;\r\nimport org.example.UTIL.Console;\r\nimport org.example.View.CasinoInterface;\r\n\r\npublic class Controller {\r\n    //TODO: method to detect if player exists from an arraylist\r\n    //TODO: logic behind username for players, easter eggs, \"guest\", \"test\", \"broke\", etc.\r\n    //TODO: logic behind PLAY & LEADERBOARD options for each game menu\r\n\r\n    CasinoInterface UI = new CasinoInterface();\r\n    Console IO = new Console();\r\n    private boolean userExists;\r\n    public boolean doesUserExists() {\r\n        return userExists;\r\n    }\r\n    public void setUserExists(boolean oneUserExists) {\r\n        this.userExists = oneUserExists;\r\n    }\r\n    //Main method used to display all main information\r\n\r\n    public void casinoOutput(){\r\n        // games that are assigned designated integers.\r\n        int slots = 1;\r\n        int roulette = 2;\r\n        int blackjack = 3;\r\n        int horseRacing = 4;\r\n        //FIXME:\r\n        setUserExists(true);\r\n\r\n        //do while loop for game menu\r\n        if(doesUserExists()) {\r\n            do {\r\n                int gameChoosen = UI.casinoMenu();\r\n                switch (gameChoosen) {\r\n                    case 1: // slots\r\n                        gameOutput(slots);\r\n                        break;\r\n                    case 2: // roulette\r\n                        gameOutput(roulette);\r\n                        break;\r\n                    case 3: // black-jack\r\n                        gameOutput(blackjack);\r\n                        break;\r\n                    case 4: // horse-racing\r\n                        gameOutput(horseRacing);\r\n                        break;\r\n                    case 5: // info\r\n                        break;\r\n                    case 6: //exit\r\n                        UI.exitPrompt();\r\n                        return;\r\n                }\r\n            } while (true);\r\n        } else {\r\n            String username = UI.firstUserPrompt();\r\n            //FIXME cannot run until resolve player creation\r\n        }\r\n    }\r\n    public void gameOutput(int game){\r\n        // do while loop for selected game's menu prompts\r\n            switch(game){ //switch for game int provided on casinoOutput function\r\n                case 1: //slots\r\n                    do {\r\n                        Console.write(\"-- Slots! --\\n\", Console.TextColor.BLUE);\r\n                        switch (UI.gamePrompt()) { //nested switch for slot chosen by gameOption\r\n                            case 1: // slots play option\r\n                                //TODO: slots game play\r\n                                break;\r\n                            case 2: // slots leaderboard option\r\n                                //TODO: slots leaderboard\r\n                                break;\r\n                            case 3: // exit\r\n                                return;\r\n                        }\r\n                    }while (true);\r\n                case 2: //roulette\r\n                    do {\r\n                        Console.write(\"-- Roulette! --\\n\", Console.TextColor.RED);\r\n                        switch (UI.gamePrompt()) { //nested switch for roulette chosen by gameOption\r\n                            case 1: // roulette play option\r\n                                //TODO: roulette game play\r\n                                break;\r\n                            case 2: // roulette leaderboard option\r\n                                //TODO: roulette leaderboard\r\n                                break;\r\n                            case 3: // exit\r\n                                return;\r\n                        }\r\n                    }while (true);\r\n                case 3: //black-jack\r\n                    do {\r\n                        Console.write(\"-- Black-Jack! --\\n\", Console.TextColor.PURPLE);\r\n                        switch (UI.gamePrompt()) { //nested switch for black-jack chosen by gameOption\r\n                            case 1: // black-jack play option\r\n                                //TODO: black-jack game play\r\n                                break;\r\n                            case 2: // black-jack leaderboard option\r\n                                //TODO: black-jack leaderboard\r\n                                break;\r\n                            case 3: // exit\r\n                                return;\r\n                        }\r\n                    }while (true);\r\n                case 4: //horse-racing\r\n                    do {\r\n                        Console.write(\"-- Horse-Racing! --\\n\", Console.TextColor.CYAN);\r\n                        switch (UI.horseRacingPrompt()) { //nested switch for horse racing chosen by gameOption\r\n                            case 1: // horse-racing play option\r\n                                //TODO: slots game play\r\n                                break;\r\n                            case 2: // horse-racing leaderboard option\r\n                                //TODO: slots leaderboard\r\n                                break;\r\n                            case 3: // horse names\r\n                                //TODO: horse name list\r\n                                break;\r\n                            case 4: // exit\r\n                                return;\r\n                        }\r\n                    }while (true);\r\n            }\r\n    }\r\n\r\n\r\n    public void testPerson(){\r\n        CasinoMembers newCasinoAI = new CasinoAI();\r\n        System.out.println(newCasinoAI);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Controller/Controller.java b/src/main/java/org/example/Controller/Controller.java
--- a/src/main/java/org/example/Controller/Controller.java	(revision cbe8328cc6920ff08f5a9bbfe68dffc1f3e78f55)
+++ b/src/main/java/org/example/Controller/Controller.java	(date 1708245473804)
@@ -27,6 +27,7 @@
         int roulette = 2;
         int blackjack = 3;
         int horseRacing = 4;
+
         //FIXME:
         setUserExists(true);
 
